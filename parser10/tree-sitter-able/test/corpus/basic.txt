==================
Simple Function
==================

fn greet(name) {
  return name
}

main := greet()

---

(source_file
  (function_definition
    (identifier)
    (parameter_list
      (parameter
        (pattern_base
          (identifier))))
    (block
      (return_statement
        (pipe_expression
          (matchable_expression
            (assignment_expression
              (range_expression
                (logical_or_expression
                  (logical_and_expression
                    (bitwise_or_expression
                      (bitwise_xor_expression
                        (bitwise_and_expression
                          (equality_expression
                            (comparison_expression
                              (shift_expression
                                (additive_expression
                                  (multiplicative_expression
                                    (unary_expression
                                      (exponent_expression
                                        (postfix_expression
                                          (primary_expression
                                            (identifier))))))))))))))))))))))
  (expression_statement
    (pipe_expression
      (matchable_expression
        (assignment_expression
          (assignment_target
            (pattern_base
              (identifier)))
          (assignment_operator)
          (assignment_expression
            (range_expression
              (logical_or_expression
                (logical_and_expression
                  (bitwise_or_expression
                    (bitwise_xor_expression
                      (bitwise_and_expression
                        (equality_expression
                          (comparison_expression
                            (shift_expression
                              (additive_expression
                                (multiplicative_expression
                                  (unary_expression
                                    (exponent_expression
                                      (postfix_expression
                                        (primary_expression
                                          (identifier))
                                        (call_suffix)))))))))))))))))))))

==================
Do Block Expression
==================

do_step := do {
  ## inside block comment
  x := 1
  x + 1
}

---

(source_file
  (expression_statement
    (pipe_expression
      (matchable_expression
        (assignment_expression
          (assignment_target
            (pattern_base
              (identifier)))
          (assignment_operator)
          (assignment_expression
            (range_expression
              (logical_or_expression
                (logical_and_expression
                  (bitwise_or_expression
                    (bitwise_xor_expression
                      (bitwise_and_expression
                        (equality_expression
                          (comparison_expression
                            (shift_expression
                              (additive_expression
                                (multiplicative_expression
                                  (unary_expression
                                    (exponent_expression
                                      (postfix_expression
                                        (primary_expression
                                          (do_expression
                                            (block
                                              (comment)
                                              (expression_statement
                                                (pipe_expression
                                                  (matchable_expression
                                                    (assignment_expression
                                                      (assignment_target
                                                        (pattern_base
                                                          (identifier)))
                                                      (assignment_operator)
                                                      (assignment_expression
                                                        (range_expression
                                                          (logical_or_expression
                                                            (logical_and_expression
                                                              (bitwise_or_expression
                                                                (bitwise_xor_expression
                                                                  (bitwise_and_expression
                                                                    (equality_expression
                                                                      (comparison_expression
                                                                        (shift_expression
                                                                          (additive_expression
                                                                            (multiplicative_expression
                                                                              (unary_expression
                                                                                (exponent_expression
                                                                                  (postfix_expression
                                                                                    (primary_expression
                                                                                      (number_literal)))))))))))))))))))))
                                              (expression_statement
                                                (pipe_expression
                                                  (matchable_expression
                                                    (assignment_expression
                                                      (range_expression
                                                        (logical_or_expression
                                                          (logical_and_expression
                                                            (bitwise_or_expression
                                                              (bitwise_xor_expression
                                                                (bitwise_and_expression
                                                                  (equality_expression
                                                                    (comparison_expression
                                                                      (shift_expression
                                                                        (additive_expression
                                                                          (multiplicative_expression
                                                                            (unary_expression
                                                                              (exponent_expression
                                                                                (postfix_expression
                                                                                  (primary_expression
                                                                                    (identifier))))))
                                                                          (multiplicative_expression
                                                                            (unary_expression
                                                                              (exponent_expression
                                                                                (postfix_expression
                                                                                  (primary_expression
                                                                                    (number_literal)))))))))))))))))))))))))))))))))))))))))))
