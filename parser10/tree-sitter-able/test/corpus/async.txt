==================
Async Constructs
==================

fn async_demo(task) {
  handle := proc task()
  future := spawn task()

  handle := handle rescue {
    case e: Error => handle
  }

  future ensure {
    cleanup_future()
  }
}

---

(source_file
  (function_definition
    (identifier)
    (parameter_list
      (parameter
        (pattern_base
          (identifier))))
    (block
      (expression_statement
        (pipe_expression
          (matchable_expression
            (assignment_expression
              (assignment_target
                (pattern_base
                  (identifier)))
              (assignment_operator)
              (assignment_expression
                (range_expression
                  (logical_or_expression
                    (logical_and_expression
                      (bitwise_or_expression
                        (bitwise_xor_expression
                          (bitwise_and_expression
                            (equality_expression
                              (comparison_expression
                                (shift_expression
                                  (additive_expression
                                    (multiplicative_expression
                                      (unary_expression
                                        (exponent_expression
                                          (postfix_expression
                                            (primary_expression
                                              (identifier)))))))))))))))))))))
      (expression_statement
        (pipe_expression
          (matchable_expression
            (assignment_expression
              (range_expression
                (logical_or_expression
                  (logical_and_expression
                    (bitwise_or_expression
                      (bitwise_xor_expression
                        (bitwise_and_expression
                          (equality_expression
                            (comparison_expression
                              (shift_expression
                                (additive_expression
                                  (multiplicative_expression
                                    (unary_expression
                                      (exponent_expression
                                        (postfix_expression
                                          (primary_expression
                                            (identifier))
                                          (call_suffix)))))))))))))))))))
      (expression_statement
        (pipe_expression
          (matchable_expression
            (assignment_expression
              (assignment_target
                (pattern_base
                  (identifier)))
              (assignment_operator)
              (assignment_expression
                (range_expression
                  (logical_or_expression
                    (logical_and_expression
                      (bitwise_or_expression
                        (bitwise_xor_expression
                          (bitwise_and_expression
                            (equality_expression
                              (comparison_expression
                                (shift_expression
                                  (additive_expression
                                    (multiplicative_expression
                                      (unary_expression
                                        (exponent_expression
                                          (postfix_expression
                                            (primary_expression
                                              (identifier)))))))))))))))))))))
      (expression_statement
        (pipe_expression
          (matchable_expression
            (assignment_expression
              (range_expression
                (logical_or_expression
                  (logical_and_expression
                    (bitwise_or_expression
                      (bitwise_xor_expression
                        (bitwise_and_expression
                          (equality_expression
                            (comparison_expression
                              (shift_expression
                                (additive_expression
                                  (multiplicative_expression
                                    (unary_expression
                                      (exponent_expression
                                        (postfix_expression
                                          (primary_expression
                                            (identifier))
                                          (call_suffix)))))))))))))))))))
      (expression_statement
        (pipe_expression
          (matchable_expression
            (rescue_expression
              (assignment_expression
                (assignment_target
                  (pattern_base
                    (identifier)))
                (assignment_operator)
                (assignment_expression
                  (range_expression
                    (logical_or_expression
                      (logical_and_expression
                        (bitwise_or_expression
                          (bitwise_xor_expression
                            (bitwise_and_expression
                              (equality_expression
                                (comparison_expression
                                  (shift_expression
                                    (additive_expression
                                      (multiplicative_expression
                                        (unary_expression
                                          (exponent_expression
                                            (postfix_expression
                                              (primary_expression
                                                (identifier))))))))))))))))))
              (rescue_block
                (match_clause
                  (typed_pattern
                    (pattern_base
                      (identifier))
                    (type_union
                      (type_arrow
                        (type_suffix
                          (type_prefix
                            (type_atom
                              (type_identifier
                                (qualified_identifier
                                  (identifier)))))))))
                  (pipe_expression
                    (matchable_expression
                      (assignment_expression
                        (range_expression
                          (logical_or_expression
                            (logical_and_expression
                              (bitwise_or_expression
                                (bitwise_xor_expression
                                  (bitwise_and_expression
                                    (equality_expression
                                      (comparison_expression
                                        (shift_expression
                                          (additive_expression
                                            (multiplicative_expression
                                              (unary_expression
                                                (exponent_expression
                                                  (postfix_expression
                                                    (primary_expression
                                                      (identifier)))))))))))))))))))))))))
      (expression_statement
        (pipe_expression
          (matchable_expression
            (ensure_expression
              (assignment_expression
                (range_expression
                  (logical_or_expression
                    (logical_and_expression
                      (bitwise_or_expression
                        (bitwise_xor_expression
                          (bitwise_and_expression
                            (equality_expression
                              (comparison_expression
                                (shift_expression
                                  (additive_expression
                                    (multiplicative_expression
                                      (unary_expression
                                        (exponent_expression
                                          (postfix_expression
                                            (primary_expression
                                              (identifier)))))))))))))))))
              (block
                (expression_statement
                  (pipe_expression
                    (matchable_expression
                      (assignment_expression
                        (range_expression
                          (logical_or_expression
                            (logical_and_expression
                              (bitwise_or_expression
                                (bitwise_xor_expression
                                  (bitwise_and_expression
                                    (equality_expression
                                      (comparison_expression
                                        (shift_expression
                                          (additive_expression
                                            (multiplicative_expression
                                              (unary_expression
                                                (exponent_expression
                                                  (postfix_expression
                                                    (primary_expression
                                                      (identifier))
                                                    (call_suffix)))))))))))))))))))))))))))
