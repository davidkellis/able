#####################################################
# Assignment

a = 11
b = 5
a = b
# a and b are now both 5

#####################################################
# Pipeline operators: pipe forward and pipe backward

# the pipe-forward operator is defined as:
fn |>(value A, func A -> R) -> R { func(value) }
fn |>(value A, func (A, B) -> R) -> R { func(value) }
fn |>(value A, func (A, B, C) -> R) -> R { func(value) }
# ...

"hi" |> puts    # prints "hi" to stdout
2 * 3 |> puts    # prints 6 to stdout
1..4 |> map {@1^2} |> puts   # prints [1, 4, 9, 16] to stdout

#####################################################
# Forward composition operator

fn square(x f64) { x ^ 2 }
fn triple(x f64) { x * 3 }

square_then_triple = square >> triple
triple_then_square = triple >> square

square_then_triple(5)   # 75
triple_then_square(5)   # 225

#####################################################
# 

#####################################################
# 

#####################################################
# 

#####################################################
# 

#####################################################
# 

#####################################################
# 

#####################################################
# 

#####################################################
# 

#####################################################
# 

#####################################################
# 

