package able.collections

union GeneratorSignal = Done | 

struct Generator T {
  channel: Channel (T | Done)
}

fn Generator[T]() -> Generator T => Generator[T](Channel())

fn yield(gen: Generator T, value: T) -> Unit {
  gen.channel.send(value)
}

impl Iterator T for Generator T {
  fn next(gen: Generator T) -> Option T {

  }
}