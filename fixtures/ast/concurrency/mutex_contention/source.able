mutex := __able_mutex_new()
trace := ""
__able_mutex_lock(mutex)
trace = trace + "A"
worker := proc {
  __able_mutex_lock(mutex)
  trace = trace + "C"
  __able_mutex_unlock(mutex)
  nil
}
proc_flush()
status_initial := (worker.status() match {
  case Pending {  } => "Pending",
  case Resolved {  } => "Resolved",
  case Cancelled {  } => "Cancelled",
  case Failed {  } => "Failed",
  case _ => "Other"
})
trace = trace + "B"
__able_mutex_unlock(mutex)
proc_flush()
status_final := (worker.status() match {
  case Pending {  } => "Pending",
  case Resolved {  } => "Resolved",
  case Cancelled {  } => "Cancelled",
  case Failed {  } => "Failed",
  case _ => "Other"
})
`${status_initial}:${status_final}:${trace}`
