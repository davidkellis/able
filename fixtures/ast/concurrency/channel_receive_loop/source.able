struct Channel {
  capacity: i32,
  handle: i64
}
methods Channel {
  fn new(capacity: i32) -> Channel {
    handle := __able_channel_new(capacity)
    return Channel { capacity: capacity, handle: handle }
  }
  fn send(self: Channel, value) {
    __able_channel_send(self.handle, value)
  }
  fn receive(self: Channel) {
    return __able_channel_receive(self.handle)
  }
  fn close(self: Channel) {
    __able_channel_close(self.handle)
  }
}
channel := Channel.new(3)
channel.send(2)
channel.send(3)
channel.close()
sum := 0
value := nil
while true {
  value := channel.receive()
  if value == nil {
    break
  }
else {
    sum += value
  }
}
sum
