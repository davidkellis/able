stage := 0
trace := ""
handle := proc {
  if stage == 0 {
    trace = trace + "A"
    stage = 1
    proc_yield()
  }
  if stage == 1 {
    trace = trace + "B"
    stage = 2
  }
  "done"
}
status_before := (handle.status() match {
  case Pending {  } => "Pending",
  case Resolved {  } => "Resolved",
  case Cancelled {  } => "Cancelled",
  case Failed {  } => "Failed",
  case _ => "Other"
})
proc_flush()
status_mid := (handle.status() match {
  case Pending {  } => "Pending",
  case Resolved {  } => "Resolved",
  case Cancelled {  } => "Cancelled",
  case Failed {  } => "Failed",
  case _ => "Other"
})
result := handle.value()
status_after := (handle.status() match {
  case Pending {  } => "Pending",
  case Resolved {  } => "Resolved",
  case Cancelled {  } => "Cancelled",
  case Failed {  } => "Failed",
  case _ => "Other"
})
`${status_before}:${status_mid}:${status_after}:${trace}:${result}`
